name: Build Mouse Mover

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxtst-dev clang

    - name: Build for Linux ${{ matrix.arch }}
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          clang -o mouse-${{ matrix.arch }} mouse.c -lX11 -lXtst -Os -s --target=aarch64-linux-gnu
        else
          clang -o mouse-${{ matrix.arch }} mouse.c -lX11 -lXtst -Os -s
        fi

    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: mouse-linux-${{ matrix.arch }}
        path: mouse-${{ matrix.arch }}

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build for macOS ${{ matrix.arch }}
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          clang -o mouse-arm64 mouse.c -framework ApplicationServices -Os -s -arch arm64
        else
          clang -o mouse-x64 mouse.c -framework ApplicationServices -Os -s -arch x86_64
        fi

    - name: Upload macOS binary
      uses: actions/upload-artifact@v4
      with:
        name: mouse-macos-${{ matrix.arch }}
        path: mouse-${{ matrix.arch }}

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build for Windows
      run: |
        cl mouse.c /link user32.lib /O2 /Fe:mouse.exe

    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: mouse-windows-x64
        path: mouse.exe
